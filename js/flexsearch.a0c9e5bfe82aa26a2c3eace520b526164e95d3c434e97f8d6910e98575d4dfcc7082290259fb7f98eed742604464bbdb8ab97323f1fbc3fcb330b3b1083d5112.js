(()=>{var ie=Object.create;var te=Object.defineProperty;var oe=Object.getOwnPropertyDescriptor;var re=Object.getOwnPropertyNames;var ae=Object.getPrototypeOf,ue=Object.prototype.hasOwnProperty;var le=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports);var he=(e,n,s,i)=>{if(n&&typeof n=="object"||typeof n=="function")for(let o of re(n))!ue.call(e,o)&&o!==s&&te(e,o,{get:()=>n[o],enumerable:!(i=oe(n,o))||i.enumerable});return e};var ce=(e,n,s)=>(s=e!=null?ie(ae(e)):{},he(n||!e||!e.__esModule?te(s,"default",{value:e,enumerable:!0}):s,e));var ne=le((exports,module)=>{(function _f(self){"use strict";try{module&&(self=module)}catch(e){}self._factory=_f;var t;function u(e){return typeof e!="undefined"?e:!0}function aa(e){let n=Array(e);for(let s=0;s<e;s++)n[s]=v();return n}function v(){return Object.create(null)}function ba(e,n){return n.length-e.length}function x(e){return typeof e=="string"}function C(e){return typeof e=="object"}function D(e){return typeof e=="function"}function ca(e,n){var s=da;if(e&&(n&&(e=E(e,n)),this.H&&(e=E(e,this.H)),this.J&&1<e.length&&(e=E(e,this.J)),s||s==="")){if(e=e.split(s),this.filter){n=this.filter,s=e.length;let i=[];for(let o=0,r=0;o<s;o++){let l=e[o];l&&!n[l]&&(i[r++]=l)}e=i}return e}return e}let da=/[\p{Z}\p{S}\p{P}\p{C}]+/u,ea=/[\u0300-\u036f]/g;function fa(e,n){let s=Object.keys(e),i=s.length,o=[],r="",l=0;for(let h=0,f,p;h<i;h++)f=s[h],(p=e[f])?(o[l++]=F(n?"(?!\\b)"+f+"(\\b|_)":f),o[l++]=p):r+=(r?"|":"")+f;return r&&(o[l++]=F(n?"(?!\\b)("+r+")(\\b|_)":"("+r+")"),o[l]=""),o}function E(e,n){for(let s=0,i=n.length;s<i&&(e=e.replace(n[s],n[s+1]),e);s+=2);return e}function F(e){return new RegExp(e,"g")}function ha(e){let n="",s="";for(let i=0,o=e.length,r;i<o;i++)(r=e[i])!==s&&(n+=s=r);return n}var ja={encode:ia,F:!1,G:""};function ia(e){return ca.call(this,(""+e).toLowerCase(),!1)}let ka={},G={};function la(e){I(e,"add"),I(e,"append"),I(e,"search"),I(e,"update"),I(e,"remove")}function I(e,n){e[n+"Async"]=function(){let s=this,i=arguments;var o=i[i.length-1];let r;return D(o)&&(r=o,delete i[i.length-1]),o=new Promise(function(l){setTimeout(function(){s.async=!0;let h=s[n].apply(s,i);s.async=!1,l(h)})}),r?(o.then(r),this):o}}function ma(e,n,s,i){let o=e.length,r=[],l,h,f=0;i&&(i=[]);for(let p=o-1;0<=p;p--){let g=e[p],q=g.length,w=v(),k=!l;for(let m=0;m<q;m++){let y=g[m],R=y.length;if(R)for(let j=0,H,A;j<R;j++)if(A=y[j],l){if(l[A]){if(!p){if(s)s--;else if(r[f++]=A,f===n)return r}(p||i)&&(w[A]=1),k=!0}if(i&&(H=(h[A]||0)+1,h[A]=H,H<o)){let B=i[H-2]||(i[H-2]=[]);B[B.length]=A}}else w[A]=1}if(i)l||(h=w);else if(!k)return[];l=w}if(i)for(let p=i.length-1,g,q;0<=p;p--){g=i[p],q=g.length;for(let w=0,k;w<q;w++)if(k=g[w],!l[k]){if(s)s--;else if(r[f++]=k,f===n)return r;l[k]=1}}return r}function na(e,n){let s=v(),i=v(),o=[];for(let r=0;r<e.length;r++)s[e[r]]=1;for(let r=0,l;r<n.length;r++){l=n[r];for(let h=0,f;h<l.length;h++)f=l[h],s[f]&&!i[f]&&(i[f]=1,o[o.length]=f)}return o}function J(e){this.l=e!==!0&&e,this.cache=v(),this.h=[]}function oa(e,n,s){C(e)&&(e=e.query);let i=this.cache.get(e);return i||(i=this.search(e,n,s),this.cache.set(e,i)),i}J.prototype.set=function(e,n){if(!this.cache[e]){var s=this.h.length;for(s===this.l?delete this.cache[this.h[s-1]]:s++,--s;0<s;s--)this.h[s]=this.h[s-1];this.h[0]=e}this.cache[e]=n},J.prototype.get=function(e){let n=this.cache[e];if(this.l&&n&&(e=this.h.indexOf(e))){let s=this.h[e-1];this.h[e-1]=this.h[e],this.h[e]=s}return n};let qa={memory:{charset:"latin:extra",D:3,B:4,m:!1},performance:{D:3,B:3,s:!1,context:{depth:2,D:1}},match:{charset:"latin:extra",G:"reverse"},score:{charset:"latin:advanced",D:20,B:3,context:{depth:3,D:9}},default:{}};function ra(e,n,s,i,o,r,l){setTimeout(function(){let h=e(s?s+"."+i:i,JSON.stringify(l));h&&h.then?h.then(function(){n.export(e,n,s,o,r+1)}):n.export(e,n,s,o,r+1)})}function K(e,n){if(!(this instanceof K))return new K(e);var s;if(e){x(e)?e=qa[e]:(s=e.preset)&&(e=Object.assign({},s[s],e)),s=e.charset;var i=e.lang;x(s)&&(s.indexOf(":")===-1&&(s+=":default"),s=G[s]),x(i)&&(i=ka[i])}else e={};let o,r,l=e.context||{};if(this.encode=e.encode||s&&s.encode||ia,this.register=n||v(),this.D=o=e.resolution||9,this.G=n=s&&s.G||e.tokenize||"strict",this.depth=n==="strict"&&l.depth,this.l=u(l.bidirectional),this.s=r=u(e.optimize),this.m=u(e.fastupdate),this.B=e.minlength||1,this.C=e.boost,this.map=r?aa(o):v(),this.A=o=l.resolution||1,this.h=r?aa(o):v(),this.F=s&&s.F||e.rtl,this.H=(n=e.matcher||i&&i.H)&&fa(n,!1),this.J=(n=e.stemmer||i&&i.J)&&fa(n,!0),s=n=e.filter||i&&i.filter){s=n,i=v();for(let h=0,f=s.length;h<f;h++)i[s[h]]=1;s=i}this.filter=s,this.cache=(n=e.cache)&&new J(n)}t=K.prototype,t.append=function(e,n){return this.add(e,n,!0)},t.add=function(e,n,s,i){if(n&&(e||e===0)){if(!i&&!s&&this.register[e])return this.update(e,n);if(n=this.encode(n),i=n.length){let p=v(),g=v(),q=this.depth,w=this.D;for(let k=0;k<i;k++){let m=n[this.F?i-1-k:k];var o=m.length;if(m&&o>=this.B&&(q||!g[m])){var r=L(w,i,k),l="";switch(this.G){case"full":if(2<o){for(r=0;r<o;r++)for(var h=o;h>r;h--)if(h-r>=this.B){var f=L(w,i,k,o,r);l=m.substring(r,h),M(this,g,l,f,e,s)}break}case"reverse":if(1<o){for(h=o-1;0<h;h--)l=m[h]+l,l.length>=this.B&&M(this,g,l,L(w,i,k,o,h),e,s);l=""}case"forward":if(1<o){for(h=0;h<o;h++)l+=m[h],l.length>=this.B&&M(this,g,l,r,e,s);break}default:if(this.C&&(r=Math.min(r/this.C(n,m,k)|0,w-1)),M(this,g,m,r,e,s),q&&1<i&&k<i-1){for(o=v(),l=this.A,r=m,h=Math.min(q+1,i-k),o[r]=1,f=1;f<h;f++)if((m=n[this.F?i-1-k-f:k+f])&&m.length>=this.B&&!o[m]){o[m]=1;let y=this.l&&m>r;M(this,p,y?r:m,L(l+(i/2>l?0:1),i,k,h-1,f-1),e,s,y?m:r)}}}}}this.m||(this.register[e]=1)}}return this};function L(e,n,s,i,o){return s&&1<e?n+(i||0)<=e?s+(o||0):(e-1)/(n+(i||0))*(s+(o||0))+1|0:0}function M(e,n,s,i,o,r,l){let h=l?e.h:e.map;(!n[s]||l&&!n[s][l])&&(e.s&&(h=h[i]),l?(n=n[s]||(n[s]=v()),n[l]=1,h=h[l]||(h[l]=v())):n[s]=1,h=h[s]||(h[s]=[]),e.s||(h=h[i]||(h[i]=[])),r&&h.includes(o)||(h[h.length]=o,e.m&&(e=e.register[o]||(e.register[o]=[]),e[e.length]=h)))}t.search=function(e,n,s){s||(!n&&C(e)?(s=e,e=s.query):C(n)&&(s=n));let i=[],o,r,l=0;if(s){e=s.query||e,n=s.limit,l=s.offset||0;var h=s.context;r=s.suggest}if(e&&(e=this.encode(""+e),o=e.length,1<o)){s=v();var f=[];for(let g=0,q=0,w;g<o;g++)if((w=e[g])&&w.length>=this.B&&!s[w])if(this.s||r||this.map[w])f[q++]=w,s[w]=1;else return i;e=f,o=e.length}if(!o)return i;n||(n=100),h=this.depth&&1<o&&h!==!1,s=0;let p;h?(p=e[0],s=1):1<o&&e.sort(ba);for(let g,q;s<o;s++){if(q=e[s],h?(g=sa(this,i,r,n,l,o===2,q,p),r&&g===!1&&i.length||(p=q)):g=sa(this,i,r,n,l,o===1,q),g)return g;if(r&&s===o-1){if(f=i.length,!f){if(h){h=0,s=-1;continue}return i}if(f===1)return ta(i[0],n,l)}}return ma(i,n,l,r)};function sa(e,n,s,i,o,r,l,h){let f=[],p=h?e.h:e.map;if(e.s||(p=ua(p,l,h,e.l)),p){let g=0,q=Math.min(p.length,h?e.A:e.D);for(let w=0,k=0,m,y;w<q&&!((m=p[w])&&(e.s&&(m=ua(m,l,h,e.l)),o&&m&&r&&(y=m.length,y<=o?(o-=y,m=null):(m=m.slice(o),o=0)),m&&(f[g++]=m,r&&(k+=m.length,k>=i))));w++);if(g){if(r)return ta(f,i,0);n[n.length]=f;return}}return!s&&f}function ta(e,n,s){return e=e.length===1?e[0]:[].concat.apply([],e),s||e.length>n?e.slice(s,s+n):e}function ua(e,n,s,i){return s?(i=i&&n>s,e=(e=e[i?n:s])&&e[i?s:n]):e=e[n],e}t.contain=function(e){return!!this.register[e]},t.update=function(e,n){return this.remove(e).add(e,n)},t.remove=function(e,n){let s=this.register[e];if(s){if(this.m)for(let i=0,o;i<s.length;i++)o=s[i],o.splice(o.indexOf(e),1);else N(this.map,e,this.D,this.s),this.depth&&N(this.h,e,this.A,this.s);if(n||delete this.register[e],this.cache){n=this.cache;for(let i=0,o,r;i<n.h.length;i++)r=n.h[i],o=n.cache[r],o.includes(e)&&(n.h.splice(i--,1),delete n.cache[r])}}return this};function N(e,n,s,i,o){let r=0;if(e.constructor===Array)if(o)n=e.indexOf(n),n!==-1?1<e.length&&(e.splice(n,1),r++):r++;else{o=Math.min(e.length,s);for(let l=0,h;l<o;l++)(h=e[l])&&(r=N(h,n,s,i,o),i||r||delete e[l])}else for(let l in e)(r=N(e[l],n,s,i,o))||delete e[l];return r}t.searchCache=oa,t.export=function(e,n,s,i,o){let r,l;switch(o||(o=0)){case 0:if(r="reg",this.m){l=v();for(let h in this.register)l[h]=1}else l=this.register;break;case 1:r="cfg",l={doc:0,opt:this.s?1:0};break;case 2:r="map",l=this.map;break;case 3:r="ctx",l=this.h;break;default:return}return ra(e,n||this,s,r,i,o,l),!0},t.import=function(e,n){if(n)switch(x(n)&&(n=JSON.parse(n)),e){case"cfg":this.s=!!n.opt;break;case"reg":this.m=!1,this.register=n;break;case"map":this.map=n;break;case"ctx":this.h=n}},la(K.prototype);function va(e){e=e.data;var n=self._index;let s=e.args;var i=e.task;switch(i){case"init":i=e.options||{},e=e.factory,n=i.encode,i.cache=!1,n&&n.indexOf("function")===0&&(i.encode=Function("return "+n)()),e?(Function("return "+e)()(self),self._index=new self.FlexSearch.Index(i),delete self.FlexSearch):self._index=new K(i);break;default:e=e.id,n=n[i].apply(n,s),postMessage(i==="search"?{id:e,msg:n}:{id:e})}}let wa=0;function O(e){if(!(this instanceof O))return new O(e);var n;e?D(n=e.encode)&&(e.encode=n.toString()):e={},(n=(self||window)._factory)&&(n=n.toString());let s=typeof window=="undefined"&&self.exports,i=this;this.o=xa(n,s,e.worker),this.h=v(),this.o&&(s?this.o.on("message",function(o){i.h[o.id](o.msg),delete i.h[o.id]}):this.o.onmessage=function(o){o=o.data,i.h[o.id](o.msg),delete i.h[o.id]},this.o.postMessage({task:"init",factory:n,options:e}))}P("add"),P("append"),P("search"),P("update"),P("remove");function P(e){O.prototype[e]=O.prototype[e+"Async"]=function(){let n=this,s=[].slice.call(arguments);var i=s[s.length-1];let o;return D(i)&&(o=i,s.splice(s.length-1,1)),i=new Promise(function(r){setTimeout(function(){n.h[++wa]=r,n.o.postMessage({task:e,id:wa,args:s})})}),o?(i.then(o),this):i}}function xa(a,b,c){let d;try{d=b?eval('new (require("worker_threads")["Worker"])("../dist/node/node.js")'):a?new Worker(URL.createObjectURL(new Blob(["onmessage="+va.toString()],{type:"text/javascript"}))):new Worker(x(c)?c:"worker/worker.js",{type:"module"})}catch(e){}return d}function Q(e){if(!(this instanceof Q))return new Q(e);var n=e.document||e.doc||e,s;this.K=[],this.h=[],this.A=[],this.register=v(),this.key=(s=n.key||n.id)&&S(s,this.A)||"id",this.m=u(e.fastupdate),this.C=(s=n.store)&&s!==!0&&[],this.store=s&&v(),this.I=(s=n.tag)&&S(s,this.A),this.l=s&&v(),this.cache=(s=e.cache)&&new J(s),e.cache=!1,this.o=e.worker,this.async=!1,s=v();let i=n.index||n.field||n;x(i)&&(i=[i]);for(let o=0,r,l;o<i.length;o++)r=i[o],x(r)||(l=r,r=r.field),l=C(l)?Object.assign({},e,l):e,this.o&&(s[r]=new O(l),s[r].o||(this.o=!1)),this.o||(s[r]=new K(l,this.register)),this.K[o]=S(r,this.A),this.h[o]=r;if(this.C)for(e=n.store,x(e)&&(e=[e]),n=0;n<e.length;n++)this.C[n]=S(e[n],this.A);this.index=s}function S(e,n){let s=e.split(":"),i=0;for(let o=0;o<s.length;o++)e=s[o],0<=e.indexOf("[]")&&(e=e.substring(0,e.length-2))&&(n[i]=!0),e&&(s[i++]=e);return i<s.length&&(s.length=i),1<i?s:s[0]}function T(e,n){if(x(n))e=e[n];else for(let s=0;e&&s<n.length;s++)e=e[n[s]];return e}function U(e,n,s,i,o){if(e=e[o],i===s.length-1)n[o]=e;else if(e)if(e.constructor===Array)for(n=n[o]=Array(e.length),o=0;o<e.length;o++)U(e,n,s,i,o);else n=n[o]||(n[o]=v()),o=s[++i],U(e,n,s,i,o)}function V(e,n,s,i,o,r,l,h){if(e=e[l])if(i===n.length-1){if(e.constructor===Array){if(s[i]){for(n=0;n<e.length;n++)o.add(r,e[n],!0,!0);return}e=e.join(" ")}o.add(r,e,h,!0)}else if(e.constructor===Array)for(l=0;l<e.length;l++)V(e,n,s,i,o,r,l,h);else l=n[++i],V(e,n,s,i,o,r,l,h)}t=Q.prototype,t.add=function(e,n,s){if(C(e)&&(n=e,e=T(n,this.key)),n&&(e||e===0)){if(!s&&this.register[e])return this.update(e,n);for(let i=0,o,r;i<this.h.length;i++)r=this.h[i],o=this.K[i],x(o)&&(o=[o]),V(n,o,this.A,0,this.index[r],e,o[0],s);if(this.I){let i=T(n,this.I),o=v();x(i)&&(i=[i]);for(let r=0,l,h;r<i.length;r++)if(l=i[r],!o[l]&&(o[l]=1,h=this.l[l]||(this.l[l]=[]),!s||!h.includes(e))&&(h[h.length]=e,this.m)){let f=this.register[e]||(this.register[e]=[]);f[f.length]=h}}if(this.store&&(!s||!this.store[e])){let i;if(this.C){i=v();for(let o=0,r;o<this.C.length;o++)r=this.C[o],x(r)?i[r]=n[r]:U(n,i,r,0,r[0])}this.store[e]=i||n}}return this},t.append=function(e,n){return this.add(e,n,!0)},t.update=function(e,n){return this.remove(e).add(e,n)},t.remove=function(e){if(C(e)&&(e=T(e,this.key)),this.register[e]){for(var n=0;n<this.h.length&&(this.index[this.h[n]].remove(e,!this.o),!this.m);n++);if(this.I&&!this.m)for(let s in this.l){n=this.l[s];let i=n.indexOf(e);i!==-1&&(1<n.length?n.splice(i,1):delete this.l[s])}this.store&&delete this.store[e],delete this.register[e]}return this},t.search=function(e,n,s,i){s||(!n&&C(e)?(s=e,e=""):C(n)&&(s=n,n=0));let o=[],r=[],l,h,f,p,g,q,w=0;if(s)if(s.constructor===Array)f=s,s=null;else{if(e=s.query||e,f=(l=s.pluck)||s.index||s.field,p=s.tag,h=this.store&&s.enrich,g=s.bool==="and",n=s.limit||n||100,q=s.offset||0,p&&(x(p)&&(p=[p]),!e)){for(let m=0,y;m<p.length;m++)(y=ya.call(this,p[m],n,q,h))&&(o[o.length]=y,w++);return w?o:[]}x(f)&&(f=[f])}f||(f=this.h),g=g&&(1<f.length||p&&1<p.length);let k=!i&&(this.o||this.async)&&[];for(let m=0,y,R,j;m<f.length;m++){let H;if(R=f[m],x(R)||(H=R,R=H.field,e=H.query||e,n=H.limit||n),k)k[m]=this.index[R].searchAsync(e,n,H||s);else{if(i?y=i[m]:y=this.index[R].search(e,n,H||s),j=y&&y.length,p&&j){let A=[],B=0;g&&(A[0]=[y]);for(let $=0,ee,z;$<p.length;$++)ee=p[$],(j=(z=this.l[ee])&&z.length)&&(B++,A[A.length]=g?[z]:z);B&&(y=g?ma(A,n||100,q||0):na(y,A),j=y.length)}if(j)r[w]=R,o[w++]=y;else if(g)return[]}}if(k){let m=this;return new Promise(function(y){Promise.all(k).then(function(R){y(m.search(e,n,s,R))})})}if(!w)return[];if(l&&(!h||!this.store))return o[0];for(let m=0,y;m<r.length;m++){if(y=o[m],y.length&&h&&(y=za.call(this,y)),l)return y;o[m]={field:r[m],result:y}}return o};function ya(e,n,s,i){let o=this.l[e],r=o&&o.length-s;if(r&&0<r)return(r>n||s)&&(o=o.slice(s,s+n)),i&&(o=za.call(this,o)),{tag:e,result:o}}function za(e){let n=Array(e.length);for(let s=0,i;s<e.length;s++)i=e[s],n[s]={id:i,doc:this.store[i]};return n}t.contain=function(e){return!!this.register[e]},t.get=function(e){return this.store[e]},t.set=function(e,n){return this.store[e]=n,this},t.searchCache=oa,t.export=function(e,n,s,i,o){if(o||(o=0),i||(i=0),i<this.h.length){let r=this.h[i],l=this.index[r];n=this,setTimeout(function(){l.export(e,n,o?r:"",i,o++)||(i++,o=1,n.export(e,n,r,i,o))})}else{let r,l;switch(o){case 1:r="tag",l=this.l;break;case 2:r="store",l=this.store;break;default:return}ra(e,this,s,r,i,o,l)}},t.import=function(e,n){if(n)switch(x(n)&&(n=JSON.parse(n)),e){case"tag":this.l=n;break;case"reg":this.m=!1,this.register=n;for(let i=0,o;i<this.h.length;i++)o=this.index[this.h[i]],o.register=n,o.m=!1;break;case"store":this.store=n;break;default:e=e.split(".");let s=e[0];e=e[1],s&&e&&this.index[s].import(e,n)}},la(Q.prototype);var Ba={encode:Aa,F:!1,G:""};let Ca=[F("[\xE0\xE1\xE2\xE3\xE4\xE5]"),"a",F("[\xE8\xE9\xEA\xEB]"),"e",F("[\xEC\xED\xEE\xEF]"),"i",F("[\xF2\xF3\xF4\xF5\xF6\u0151]"),"o",F("[\xF9\xFA\xFB\xFC\u0171]"),"u",F("[\xFD\u0177\xFF]"),"y",F("\xF1"),"n",F("[\xE7c]"),"k",F("\xDF"),"s",F(" & ")," and "];function Aa(e){var n=e=""+e;return n.normalize&&(n=n.normalize("NFD").replace(ea,"")),ca.call(this,n.toLowerCase(),!e.normalize&&Ca)}var Ea={encode:Da,F:!1,G:"strict"};let Fa=/[^a-z0-9]+/,Ga={b:"p",v:"f",w:"f",z:"s",x:"s",\u00DF:"s",d:"t",n:"m",c:"k",g:"k",j:"k",q:"k",i:"e",y:"e",u:"o"};function Da(e){e=Aa.call(this,e).join(" ");let n=[];if(e){let s=e.split(Fa),i=s.length;for(let o=0,r,l=0;o<i;o++)if((e=s[o])&&(!this.filter||!this.filter[e])){r=e[0];let h=Ga[r]||r,f=h;for(let p=1;p<e.length;p++){r=e[p];let g=Ga[r]||r;g&&g!==f&&(h+=g,f=g)}n[l++]=h}}return n}var Ia={encode:Ha,F:!1,G:""};let Ja=[F("ae"),"a",F("oe"),"o",F("sh"),"s",F("th"),"t",F("ph"),"f",F("pf"),"f",F("(?![aeo])h(?![aeo])"),"",F("(?!^[aeo])h(?!^[aeo])"),""];function Ha(e,n){return e&&(e=Da.call(this,e).join(" "),2<e.length&&(e=E(e,Ja)),n||(1<e.length&&(e=ha(e)),e&&(e=e.split(" ")))),e||[]}var La={encode:Ka,F:!1,G:""};let Ma=F("(?!\\b)[aeo]");function Ka(e){return e&&(e=Ha.call(this,e,!0),1<e.length&&(e=e.replace(Ma,"")),1<e.length&&(e=ha(e)),e&&(e=e.split(" "))),e||[]}G["latin:default"]=ja,G["latin:simple"]=Ba,G["latin:balance"]=Ea,G["latin:advanced"]=Ia,G["latin:extra"]=La;let W=self,Y,Z={Index:K,Document:Q,Worker:O,registerCharset:function(e,n){G[e]=n},registerLanguage:function(e,n){ka[e]=n}};(Y=W.define)&&Y.amd?Y([],function(){return Z}):W.exports?W.exports=Z:W.FlexSearch=Z})(exports)});var se=ce(ne());var X=document.getElementById("search__text"),_=document.getElementById("search__suggestions");X!==null&&document.addEventListener("keydown",e=>{e.ctrlKey&&e.key==="/"?(e.preventDefault(),X.focus()):e.key==="Escape"&&(X.blur(),_.classList.add("search__suggestions--hidden"))});document.addEventListener("click",e=>{_.contains(e.target)||_.classList.add("search__suggestions--hidden")});document.addEventListener("keydown",e=>{if(_.classList.contains("search__suggestions--hidden"))return;let s=[..._.querySelectorAll("a")];if(s.length===0)return;let i=s.indexOf(document.activeElement);if(e.key==="ArrowDown"){e.preventDefault();let o=i+1<s.length?i+1:i;s[o].focus()}else e.key==="ArrowUp"&&(e.preventDefault(),nextIndex=i>0?i-1:0,s[nextIndex].focus())});(function(){let e=new se.Document({tokenize:"forward",cache:100,document:{id:"id",store:["href","title","description"],index:["title","description","content"]}});e.add({id:0,href:"/blog/holiday-self-care/",title:"Holiday Self Care",description:`Facing the holidays can be daunting to anyone, especially if you&rsquo;re exhausted and feeling burn-out. The looming specter of faking holiday cheer is cringeworthy at best, particularly while trying to keep the peace.
I&rsquo;m here to ring the bell of HOPE! You don&rsquo;t have to continue to suffer through the insufferable today. If you&rsquo;re not putting yourself first then you probably have nothing to give to others.
Here are 7 self-care tips for enjoying the holidays while nourishing your serenity.`,content:`Facing the holidays can be daunting to anyone, especially if you&rsquo;re exhausted and feeling burn-out. The looming specter of faking holiday cheer is cringeworthy at best, particularly while trying to keep the peace.
I&rsquo;m here to ring the bell of HOPE! You don&rsquo;t have to continue to suffer through the insufferable today. If you&rsquo;re not putting yourself first then you probably have nothing to give to others.
Here are 7 self-care tips for enjoying the holidays while nourishing your serenity.
1. Your Support Posse# Do you have a clawing creature in your heart that causes you to feel isolated when surrounded by others? It&rsquo;s time to soothe that inner roar instead of telling it to shut up.
Are you going to a party, family gathering or a situation where you know you&rsquo;re going to be uncomfortable? Make sure to bring a trusted support person. If it&rsquo;s not ok for you to bring someone with you then you have the right to choose to not attend! You do not have to attend anything that you know will cause you discomfort.
Loneliness and the holidays go hand-in-hand sometimes. In preparation for that possibility, write a list, as a reminder of who&rsquo;s in your Support Posse. I suggest reaching out to them now to create a mutual support system. Trust me, you aren&rsquo;t the only one!
2. Exit Plan# How many times have you felt trapped in a place because you didn&rsquo;t take your own transportation or devise an exit strategy before arriving? It&rsquo;s the worst! Lets not re-create that scenario.
You can bestow yourself with the peace of mind by knowing ahead of time how you can leave when you need to. Knowing this will lessen hyper-sensitivity to triggers or acting out in ways you&rsquo;d prefer not to.
If you decide against taking your own transportation then I encourage you to have ride-share apps ready and always have cash on hand if an actual taxi service is needed. You have the right to leave a place where you feel unsafe or disrespected.
3. Healthy Routine# A holiday from work or school doesn&rsquo;t mean a holiday from who you are. Neglecting your normal routines, the very foundation of what makes you whole, can disrupt your equilibrium.
Continue to maintain your daily routine even during the holidays. Give yourself and others the opportunity to be known and to know you. Your routine is intrinsic to who you are. Take a few minutes to write down what you do on a daily basis that gives you a sense of balance.
A few examples of common daily routines may include number of meals, types of foods, needed medicine, bathing, exercise, prayer or meditation, socializing with your support posse, amount of sleep, hobbies, etc.
4. You are a Gift# The holidays have become a commodity. How many stories are there of people suffering emotionally and economically trying to make sure they have gifts for everyone they &ldquo;should&rdquo; give to?
Your presence is a gift! Your willingness to share your time with others and to allow others to get to know you is worth more than becoming indebted or depleting emotional reserves.
If you feel compelled to give gifts then consider gifts that you feel good about giving, you could make yourself or coupons you create redeemable for time spent together doing fun activities.
5. Create your own Holiday# Do you feel holidays are imposed on you rather than something you choose? Are there certain holiday rituals you have always forced yourself to do because &ldquo;that&rsquo;s the way it is&rdquo;?
You have permission to use your imagination to design holiday rituals that embody what the holidays really mean to you! This will give you a feeling of belonging and relating to the holidays on a more profound level. Often it feels like we&rsquo;re tolerating life rather than creating it. I encourage you to take time to create a ritual this holiday season that has special meaning for you. You&rsquo;ll be surprised at the impact this can have on your holiday cheer!
6. Be of Service# I have a ritual of volunteering during the holidays such as going to soup kitchens, help with crisis hotlines or packaging items for the needy. There are only a few of the many ways we can be of service to others. I&rsquo;m not suggesting you to stress over how to give, especially if you already exhaust yourself by giving too much to others and not enough to yourself.
I am suggesting you try to keep your eyes open for someone who needs help: call someone to check in to remind them they&rsquo;re not alone, help someone who is struggling in some way. Randomly leave sticky notes in public places, on cars, on doors with kind words such as &ldquo;I&rsquo;m grateful you exist!&rdquo;, &ldquo;You matter!&rdquo;, etc.
It feels good to get outside of ourselves and our problems, even if for a little while, to be given a new perspective.
7. Dress Comfortably# Sounds silly? It&rsquo;s one of the most practical advice I can give you! During the holidays my cousins and I celebrate Pajamarama. It&rsquo;s a self-created ritual created by us when we were little kids where we wear pajamas, watch movies and spend time together. We still do this as adults with families of our own.
Dress yourself in ways that nourish comfort, joy and self-care.
Comfort + Fun = A Great Time
I&rsquo;m blessed to support your journey towards wholeness this holiday season!
`}).add({id:1,href:"/blog/go-std-lib-absent-trivial-features/",title:"Go Std Lib Absent Trivial Features",description:`The Go standard library (std lib) was deliberately created to be minimalistic compared to the standard libraries of other languages. This design choice fits with Go&rsquo;s philosophy of simplicity and the preference for small, independent features that can be combined in different ways.
There are many commonly used functions that you might expect to find in the Go std lib but are absent because they were thought to be &ldquo;too trivial&rdquo; to write.`,content:`The Go standard library (std lib) was deliberately created to be minimalistic compared to the standard libraries of other languages. This design choice fits with Go&rsquo;s philosophy of simplicity and the preference for small, independent features that can be combined in different ways.
There are many commonly used functions that you might expect to find in the Go std lib but are absent because they were thought to be &ldquo;too trivial&rdquo; to write.
Here are a few missing ones and my trivial implementations for them.
Slice Contains Value# Check to see if a slice contains an input value.
func Contains(slice []int, input int) bool { for _, el := range slice { if el == input { return true } } return false } numbers := []int{1, 2, 3} result := Contains(numbers, 3) // true As of Go 1.18 (March 2022), it&rsquo;s possible to use generics.
func Contains[T comparable](slice []T, input T) bool { for _, el := range slice { if el == input { return true } } return false } numbers := []int{1, 2, 3} result := Contains(numbers, 3) // true fruits := []string{&#34;apple&#34;, &#34;banana&#34;, &#34;peach&#34;} result := Contains(fruits, &#34;grape&#34;) // false As of Go 1.21 (August 2023), the previously experimental slices package has been added to the std lib and it has a Contains function.
import &#34;slices&#34; sports := []string{&#34;football&#34;, &#34;baseball&#34;, &#34;basketball&#34;} slices.Contains(sports, &#34;football&#34;) // true Map over a Slice# Map means to apply a function to each element in a slice and then create a new slice with the results.
func Map(slice []int, fn func(int) int) []int { result := make([]int, len(slice)) for i, el := range slice { result[i] = fn(el) } return result } numbers := []int{1, 2, 3} doubled := Map(numbers, func(n int) int { return n * 2 }) // [2, 4, 6] As of Go 1.18 (March 2022), it&rsquo;s possible to use generics.
func Map[T, V any](slice []T, fn func(T) V) []V { result := make([]V, len(slice)) for i, el := range slice { result[i] = fn(el) } return result } numbers := []int{1, 2, 3} plusOne := Map(numbers, func(n int) int { return n + 1 }) // [2, 3, 4] strSlice := Map(numbers, func(n int) string { return fmt.Sprint(&#34;Item:%d&#34;, n) }) // [&#34;Item:1&#34;, &#34;Item:2&#34;, &#34;Item:3&#34;] Filter a Slice# Filter means to extract slice elements that meet a certain criteria from an input function and return a new slice with elements that meet the criteria.
func Filter(slice []int, fn func(int) bool) []int { var result []int for _, el := range slice { if fn(el) { result = append(result, el) } } return result } ages := []int{14, 18, 21, 16, 25, 5} adults := Filter(ages, func(age int) bool { return age &gt;= 18 }) // [18, 21, 25] As of Go 1.18 (March 2022), it&rsquo;s possible to use generics.
func Filter[T any](slice []T, fn func(T) bool) []T { var result []T for _, el := range slice { if fn(el) { result = append(result, el) } } return result } numbers := []int{1, 2, 3} filteredNum := Filter(numbers, func(n int) bool { return n &gt; 1 }) // [2, 3] words := []string{&#34;engine&#34;, &#34;architecture&#34;, &#34;home&#34;} filteredStr := Filter(weather, func(s string) bool { return len(s) &gt; 7 }) // [&#34;architecture&#34;] Reduce a Slice# Reduce means to take a slice and combine its elements into a single value using an input combining function.
func Reduce(slice []int, initial int, fn func(int, int) int) int { result := initial for _, el := range slice { result = fn(result, el) } return result } prices := []int{100, 20, 30} total := Reduce(prices, 0, func(accumulation, price int) int { return accumulation + price }) // 150 As of Go 1.18 (March 2022), it&rsquo;s possible to use generics.
func Reduce[T, M any](slice []T, fn func(M, T) M, initial M) M { result := initial for _, el := range slice { result = fn(result, el) } return result } words := []string{&#34;This&#34;, &#34;is&#34;, &#34;Go!&#34;} concatenated := Reduce(words, func(accumulation, next string) string { return accumulation + &#34; &#34; + next }) // &#34;This is Go!&#34; My functions list is by no means exhaustive and neither is my implementation for them.
What other absent functions have you written implementations for?
Feel free to share!
Resources# Go std lib documentation
std lib slices package
Go 1.18 Release Notes
Go 1.21 Release Notes
`}).add({id:2,href:"/blog/dotnet-core-big-picture/",title:".NET Core: The Big Picture",description:`The .NET ecosystem has evolved significantly since 2016 when .NET Core 1.0 was released. Initially introduced as a lean, modular, and cross-platform subset of the full .NET Framework, .NET Core has matured into a robust platform for building a wide range of applications.
A Unified Platform
As of .NET 5 and its successor, .NET 6, the platform unifies the .NET ecosystem, bringing together the best of .NET Core, .NET Framework, Xamarin, and Mono into a single framework.`,content:` The .NET ecosystem has evolved significantly since 2016 when .NET Core 1.0 was released. Initially introduced as a lean, modular, and cross-platform subset of the full .NET Framework, .NET Core has matured into a robust platform for building a wide range of applications.
A Unified Platform
As of .NET 5 and its successor, .NET 6, the platform unifies the .NET ecosystem, bringing together the best of .NET Core, .NET Framework, Xamarin, and Mono into a single framework. This unified platform is simply called &ldquo;.NET&rdquo;, marking a significant shift away from the separate entities of .NET Core and the full .NET Framework.
Cross-Platform and Open Source
.NET (formerly .NET Core) retains its cross-platform capabilities, running seamlessly on Windows, Linux, and macOS. As an open-source framework, it continues to benefit from community contributions, with its source code accessible on GitHub.
Modular Design
The modular nature remains a key feature, allowing developers to include only the necessary packages via NuGet. This approach ensures applications are lightweight, with minimal dependencies.
.NET Standard
The .NET Standard, a set of APIs guaranteed to be available on all .NET implementations, has played a crucial role in this unification. It provides a consistent base for building libraries that work across all .NET flavors, enhancing code sharing and compatibility.
ASP.NET Core, the web development framework within the .NET ecosystem, has also seen significant updates. It remains a versatile framework for building web apps, APIs, microservices, and real-time applications using SignalR.
Target Frameworks
With the advancements in .NET, ASP.NET Core apps can target the unified .NET platform, benefiting from improvements in performance, security, and development capabilities.
Blazor for Web UI
A notable addition to ASP.NET Core is Blazor, a framework for building interactive client-side web UIs using C# instead of JavaScript. Blazor can run in the browser via WebAssembly or on the server, offering flexibility in how web applications are architected.
Continued Focus on Performance and Security
ASP.NET Core emphasizes performance and security. Its lightweight, modular nature ensures that applications are fast and resource-efficient, while built-in features like Identity Server and GDPR compliance tools make it easier to build secure web applications.
2016 (legacy info)# The new .NET Core is a modular verion of the full .NET Framework. Microsoft designed .NET Core to be portable across multiple platform in order to maximize code sharing and code re-use. It&rsquo;s a subset of the full .NET Framework that provides key functionalities to create the application we want and be able to reuse that app&rsquo;s code wherever, regardless of platform.
Our choice of platform makes no difference as .NET Core features are universal across all of them. For web apps, we could choose Windows, Linux or MacOS. Non-web app platforms include desktops, mobile and other devices.
.NET Core is called modular because it&rsquo;s divided into many small specialized assemblies on Nuget as opposed to a single massive assembly with the full .NET Framework. This allows us to individually select the packages we want to incorporate in our app while bypassing everything else. Our app&rsquo;s size is kept to a minimum this way.
Finally, .NET Core implements the new .NET Standard. The purpose of .NET Standard is to have an official agreement of .NET apis that are available across all platforms of .NET. It&rsquo;s essentially one giant library to rule them all. Code sharing between multiple .NET platforms becomes easier for those platforms that implement this standard. The old way of using Portable Class Libraries jumping from platform to platform should fade.
ASP.NET Core
ASP.NET Core is an open-source, cross-platform framework for building modern, cloud-based internet connected applications. In addition to web apps, this framework can be used for mobile apps and Internet-Of-Things apps as well.
Being open-souce, we can peruse ASP.NET Core&rsquo;s source code at github.com/aspnet and freely contribute to that project.
ASP.NET Core is cross-platform so we can write our apps on Windows, MacOS or Linux. A variety of IDEs and text editors are available are on those platforms from the ever reliable Visual Studio to Visual Studio Code to Project Rider by JetBrains.
Microsoft created ASP.NET Core from scratch. It&rsquo;s not an update to ASP.NET 4 as that framework was based on the System.Web namespace, which meant having many excess functionalities. The Core team decided to forgo big and bulky for granular and lean. As with .NET Core, ASP.NET Core is also based on modular Nuget packages. We only import the packages we need for our app. Less excess results in tighter security, reduced maintenance and improved performance.
Frameworks
ASP.NET Core apps can target either the full .NET Framework or .NET Core. If we choose full .NET then we&rsquo;ll have all the dependencies we&rsquo;re used to having. Since .NET Core is newer, not all the assemblies are available yet. There&rsquo;s the possibility that .NET Core will never port over certain assemblies. However, if the app wants to maximize modularity, have a small memory footprint and be cross-platform then nothing beats targeting .NET Core. Unless we utilize .NET features to it&rsquo;s fullest, ASP.NET Core apps should choose .NET Core as their framework.
`}).add({id:3,href:"/blog/go-programming-language/",title:"Go Programming Language",description:"Go was created by a team inside Google back in 2009. Three big languages that were used at Google at that time were C/C++, Java and Python. The creators of Go saw that each of those three languages was powerful but had limitations. For example, Python was easy to pickup and learn but ran into trouble when running apps at the scale a massive company like Google needed. Java started out simple but its type system grew increasingly complex.",content:` Go was created by a team inside Google back in 2009. Three big languages that were used at Google at that time were C/C++, Java and Python. The creators of Go saw that each of those three languages was powerful but had limitations. For example, Python was easy to pickup and learn but ran into trouble when running apps at the scale a massive company like Google needed. Java started out simple but its type system grew increasingly complex. C/C++ was wickedly fast but it also had a complex type system and it suffered from notoriously slow compile-times. The three languages were also created at a time when multi-threaded applications were rare. Concurrency was added to them at a later date. Google&rsquo;s often highly concurrent and parallel environments posed challenges for them. Go was the answer to many of the concerns Python, Java and C/C++ had.
Go Features# Simplified and Efficient Concurrency
Go\u2019s approach to concurrency is one of its standout features. Unlike languages where concurrency feels like an afterthought, Go was designed with concurrency at its core, thanks to goroutines and channels.
Goroutines: Lightweight threads managed by the Go runtime. They are less resource-intensive than traditional threads and are easy to create.
func printCounts(label string, count int) { for i := 0; i &lt; count; i++ { fmt.Println(label, &#34;:&#34;, i) } } func main() { go printCounts(&#34;asyncCount&#34;, 5) // Executed Asynchronously printCounts(&#34;syncCount&#34;, 5) // Executed Synchronously } In this example, printCounts is called as a goroutine and runs asynchronously alongside the main function&rsquo;s execution.
Channels: Pipes that connect concurrent goroutines, allowing them to communicate with each other safely.
func compute(values chan int) { for i := 0; i &lt; 5; i++ { values &lt;- i * i // Send i*i to the channel } close(values) } func main() { values := make(chan int) go compute(values) for value := range values { fmt.Println(value) } } Here, compute sends squared values to the values channel, which are then read and printed in the main function.
Interface Implementation
In Go, interfaces are implicitly implemented. This means that a type implements an interface by just implementing its methods, without needing to explicitly declare it.
type Vehicle interface { StartEngine() bool } type Car struct { Model string } func (c Car) StartEngine() bool { return true } func main() { var myCar Vehicle = Car{Model: &#34;Tesla Model S&#34;} fmt.Println(&#34;Engine started:&#34;, myCar.StartEngine()) } Here, Car implicitly implements the Vehicle interface by defining the StartEngine method.
Garbage Collection
Go offers a modern garbage collector that provides a good balance between performance and convenience. It efficiently manages memory, freeing developers from manual memory management, common in languages like C++.
Cross-Platform Binary Compilation
Go compiles down to a single binary, simplifying deployment. This binary contains all dependencies, making distribution and versioning more straightforward.
Standard Library
Go&rsquo;s standard library is another strong suit, offering a wealth of utilities ranging from file handling to networking. It&rsquo;s designed to encourage the creation of reliable and efficient programs.
// Sample to demonstrate HTTP server creation func main() { http.HandleFunc(&#34;/&#34;, func(w http.ResponseWriter, r *http.Request) { fmt.Fprintln(w, &#34;Welcome to my Go server!&#34;) }) log.Fatal(http.ListenAndServe(&#34;:8080&#34;, nil)) } This example shows how simple it is to set up a basic HTTP server using Go&rsquo;s standard library.
Growing Go Community
Go has a strong and passionate community supporting the language. A language lives or dies based on its community support as it&rsquo;s the community who spreads the word and makes sure new developers wanting to learn the language have as an easy time as possible to learn it. Go certainly has a fervent community.
Philosophy of Simplicity
Go benefits from simplicity and simplicity ought to be recognized as a language feature. Simplicity as in the creators consciously left out features that are popular in other languages because they felt they would add complexity to Go.
Features like generics (only recently added in 2022 in a limited form), assertions, and method overloading are omitted to keep the language straightforward and uncluttered.
Resources# Be sure to check out the official Go website for more information.
`}).add({id:4,href:"/blog/http-methods-overview/",title:"HTTP Methods Overview",description:`HTTP methods, also known as HTTP verbs, are fundamental to web development as they define the action to be performed on a given resource identified by a Request-URI. They are essential in RESTful APIs, where the method signifies the desired action on the server&rsquo;s data.
Understanding these methods is crucial for web developers as they directly correspond to the basic operations in any data-driven application, often described as CRUD (Create, Read, Update, Delete).`,content:`HTTP methods, also known as HTTP verbs, are fundamental to web development as they define the action to be performed on a given resource identified by a Request-URI. They are essential in RESTful APIs, where the method signifies the desired action on the server&rsquo;s data.
Understanding these methods is crucial for web developers as they directly correspond to the basic operations in any data-driven application, often described as CRUD (Create, Read, Update, Delete). Here&rsquo;s an overview of the most common HTTP methods and their usage in the context of a simple web API, illustrating their roles in interacting with a Car Dealership database.
The scenario:
Imagine you&rsquo;re tasked to create a simple RESTful API that hits a Car Dealership database with only two entities, Make and Model. It&rsquo;s a one-to-many relationship where a particular Make can have many Models. For example, Toyota (Make) produces the Camry, Tundra, 4Runner, etc (Models).
General uri format: api/makes/{makeId}/models/{modelId} Reading Resources# Request: GET api/makes Response: 200 Ok -&gt; [{make}, {make}, ...] 404 Not Found We send a GET request if we want a list of resources. A successful response will return 200 Ok and said resource list in the response body. We return 404 Not Found if the uri doesn&rsquo;t exist.
Request: GET api/makes/{makeId} Response: 200 Ok -&gt; {make} 404 Not Found If we want to read a resource, we add the id. A success will return that resource in the response body. A 404 is returned if the resource doesn&rsquo;t exist.
Deleting Resources# Request: DELETE api/makes/{makeId} Response: 204 No Content 404 Not Found We return a 204 No Content after a successful DELETE request of a resource and return a 404 if the resource is not found. No Content means the server has successfully fulfilled the request and that there&rsquo;s nothing to be sent with the response body.
Request: DELETE api/makes Response: 204 No Content 404 Not Found Deleting a list of resources follows the same guidelines as above but it&rsquo;s rarely done as it can be quite destructive. Generally, mass deletion is not allowed.
Creating Resources# When creating resources, we have to differentiate between requests where the responsibility of creating the URI is at the server or at our API consumer.
Server# Request: POST api/makes &lt;- {make} Response: 201 Created -&gt; {make} 404 Not Found To create a new car Make, we send a POST request to the Makes resource with the Make object as the request body. If creation is successful then the status code is 201 Created and the response contains the created Make object in the response body and the location in the location header. If the Makes resource doesn&rsquo;t exist then we return 404 as usual.
Request: POST api/makes/{makeId} Response: 404 Not Found 409 Conflict Issuing a POST request to a single resource URI can never be successful because either a 404 Not Found is returned if the Make doesn&rsquo;t exist or a 409 Conflict is returned because that particular Make already exists.
Request: POST api/makelist &lt;- {makeList} Response: 201 Created -&gt; {makeList} 404 Not Found Adding a list of resources, if allowed, should have a new resource URI created for that list. For example, we can call it MakeList and a POST request to that resource will contain an array of Makes. We return a 201 Created with the new list in the response body for a successful response and return 404 if that resource list doesn&rsquo;t exist.
Consumer# Request: PUT api/makes/{makeId} &lt;- {make} Response: 201 Created -&gt; {make} When the consumer of our api is allowed to create resource uris, we can &ldquo;upsert&rdquo; to create resources. For example, a PUT request is issued to update an existing resource, fine, but if the same PUT request is issued on a resource that doesn&rsquo;t exist then that will result in the resource being created. Hence, why a 201 Created is returned with the newly created Make in the response body. A 404 Not Found will never occur because a non-existent resource will be created.
Request: PATCH api/makes/{makeId} &lt;- {JsonPatchDocument on make} Response: 201 Created -&gt; {make} Upserting with a partial resource update with a PATCH request works identically to upserting with PUT except that a json patch document is included in the request.
Updating Resources# Request: PUT api/makes/{makeId} &lt;- {make} Response: 200 Ok -&gt; {make} 204 No Content 404 Not Found Sending a PUT request on a resource updates that resource. Since it&rsquo;s a PUT, we should pass in the request the full Make object or else the omitted fields will be set to their default values. We return 200 Ok with a successfully updated resource in the response body or just state 204 No Content. Non-existent resources return a 404 Not Found, unless we&rsquo;re upserting.
Request: PUT api/makes &lt;- [{make}, {make}, ...] Response: 200 Ok -&gt; [{make}, {make}, ...] 204 No Content 404 Not Found Using a PUT request for mass updates is typically not allowed but can be done. It follows the same guidelines as updating a single resource except the resource list is passed in the request and the updated list is returned in the successful response body. Non-existent resources return a 404 Not Found, unless we&rsquo;re upserting.
Request: PATCH api/makes/{makeId} &lt;- {JsonPatchDocument on make} Response: 200 Ok -&gt; {make} 204 No Content 404 Not Found Partial updates with a PATCH request is similar to a PUT request. Except we don&rsquo;t have to pass a full resource object in the request. We list the fields we want to update in a json patch document and the omitted fields will keep their existing values. A successful response can return 200 Ok with the patched resource object in the body or simply show a 204 No Content. Non-existent resources return a 404 Not Found, unless we&rsquo;re upserting.
Request: PATCH api/makes &lt;- {JsonPatchDocument on make} Response: 200 Ok -&gt; [{make}, {make}, ...] 204 No Content 404 Not Found Using PATCH to mass update resources, like most mass operations, is rarely allowed. If it&rsquo;s allowed then it follows the same guidelines as PATCHing a single resource.
`}),X.addEventListener("input",function(){let s=this.value,i=e.search(s,5,{enrich:!0}),o=new Map;for(let r of i.flatMap(l=>l.result))o.has(r.href)||o.set(r.doc.href,r.doc);if(_.innerHTML="",_.classList.remove("search__suggestions--hidden"),o.size===0&&s){let r=document.createElement("div");r.innerHTML=`No results for "<strong>${s}</strong>"`,r.classList.add("search__no-results"),_.appendChild(r);return}for(let[r,l]of o){let h=document.createElement("a");h.href=r,h.classList.add("search__suggestion-item"),_.appendChild(h);let f=document.createElement("div");f.textContent=l.title,f.classList.add("search__suggestion-title"),h.appendChild(f);let p=document.createElement("div");if(p.textContent=l.description,p.classList.add("search__suggestion-description"),h.appendChild(p),_.childElementCount===5)break}})})();})();
//! Source: https://github.com/h-enk/doks/blob/master/assets/js/index.js
/*! Source: https://dev.to/shubhamprakash/trap-focus-using-javascript-6a3 */
//! Source: https://discourse.gohugo.io/t/range-length-or-last-element/3803/2
