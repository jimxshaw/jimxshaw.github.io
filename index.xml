<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hi, I'm Jim! on Jim Shaw</title><link>https://jimxshaw.github.io/</link><description>Recent content in Hi, I'm Jim! on Jim Shaw</description><generator>Hugo -- gohugo.io</generator><copyright>© 2023 Jim Shaw</copyright><atom:link href="https://jimxshaw.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>.NET Core: The Big Picture</title><link>https://jimxshaw.github.io/blog/dotnet-core-big-picture/</link><pubDate>Mon, 12 Jun 2017 16:10:34 +0000</pubDate><guid>https://jimxshaw.github.io/blog/dotnet-core-big-picture/</guid><description>The .NET ecosystem has evolved significantly since 2016 when .NET Core 1.0 was released. Initially introduced as a lean, modular, and cross-platform subset of the full .NET Framework, .NET Core has matured into a robust platform for building a wide range of applications.
A Unified Platform
As of .NET 5 and its successor, .NET 6, the platform unifies the .NET ecosystem, bringing together the best of .NET Core, .NET Framework, Xamarin, and Mono into a single framework.</description></item><item><title>Go Programming Language</title><link>https://jimxshaw.github.io/blog/go-programming-language/</link><pubDate>Sat, 20 Aug 2016 09:20:00 +0000</pubDate><guid>https://jimxshaw.github.io/blog/go-programming-language/</guid><description>Go was created by a team inside Google back in 2009. Three big languages that were used at Google at that time were C/C++, Java and Python. The creators of Go saw that each of those three languages was powerful but had limitations. For example, Python was easy to pickup and learn but ran into trouble when running apps at the scale a massive company like Google needed. Java started out simple but its type system grew increasingly complex.</description></item><item><title>HTTP Methods Overview</title><link>https://jimxshaw.github.io/blog/http-methods-overview/</link><pubDate>Tue, 09 Jun 2015 16:48:17 +0000</pubDate><guid>https://jimxshaw.github.io/blog/http-methods-overview/</guid><description>HTTP methods, also known as HTTP verbs, are fundamental to web development as they define the action to be performed on a given resource identified by a Request-URI. They are essential in RESTful APIs, where the method signifies the desired action on the server&amp;rsquo;s data.
Understanding these methods is crucial for web developers as they directly correspond to the basic operations in any data-driven application, often described as CRUD (Create, Read, Update, Delete).</description></item><item><title>About</title><link>https://jimxshaw.github.io/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jimxshaw.github.io/about/</guid><description>I&amp;rsquo;ve been fascinated with computers, technology and the internet ever since my parents gifted me my first PC, a Compaq with an Intel Pentium II chip, back in the late-90s.
I love finding and learning new things, especially with all things code-related.
On my site, I share what&amp;rsquo;s on my mind, things I&amp;rsquo;m currently working on and what I plan to do in the future. I love to connect with folks of similar mindsets or even different mindsets and hope to hear from you.</description></item><item><title>Resume</title><link>https://jimxshaw.github.io/resume/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jimxshaw.github.io/resume/</guid><description>Skills# Current (include but not limited to)
Frontend
ReactJS, Tailwind CSS
Backend
Go (Golang), Python
DevOps
Docker, Kubernetes
Cloud
AWS, GCP
Past
Mobile
Android (Kotlin), Flutter (Dart)
Backend
C#/.NET, Java
Experience# Founder and Lead Engineer October 2023 - present Terra Verde Consulting McKinney, TX Terra Verde Consulting specializes in providing software engineering solutions for clients, ranging from individuals to enterprise companies
Senior Software Engineer June 2022 - July 2023 Lone Wolf Technologies — LionDesk CRM team Dallas, TX Successfully migrated legacy PHP Laravel monolith system to a new scalable Go microservices system deployed to AWS Relational Database Service, Elastic Container Registry and Elastic Kubernetes Service.</description></item></channel></rss>